openapi: 3.0.3
info:
  title: Unified Access Control System
  version: 0.0.0
paths:
  /activity-log/:
    get:
      operationId: activity_log_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - activity-log
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityLogList'
          description: ''
  /activity-log/{id}:
    get:
      operationId: activity_log_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - activity-log
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /email_otp/:
    post:
      operationId: email_otp_create
      tags:
      - email_otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailOTP'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailOTP'
          description: ''
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
  /permission_set/:
    post:
      operationId: permission_set_create
      tags:
      - permission_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffPermission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StaffPermission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StaffPermission'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffPermission'
          description: ''
  /reset_password:
    put:
      operationId: reset_password_update
      tags:
      - reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
    patch:
      operationId: reset_password_partial_update
      tags:
      - reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResetPassword'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /service_providers/:
    get:
      operationId: service_providers_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - service_providers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceProviderList'
          description: ''
  /service_providers/{id}/:
    get:
      operationId: service_providers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service_providers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
  /service_providers/{id}/status_toggle/:
    put:
      operationId: service_providers_status_toggle_update
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
    patch:
      operationId: service_providers_status_toggle_partial_update
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceProvider'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
  /service_providers/create/:
    post:
      operationId: service_providers_create_create
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      tags:
      - service_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceProvider'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
  /staff/{id}/reset/:
    put:
      operationId: staff_reset_update
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    patch:
      operationId: staff_reset_partial_update
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /staff/{id}/revoke/:
    put:
      operationId: staff_revoke_update
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    patch:
      operationId: staff_revoke_partial_update
      description: |-
        Mixin to track user actions

        :cvar log_message:
            Log message to populate remarks in LogAction

            type --> str

            set this value or override get_log_message

            If not set then, default log message is generated
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - staff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /staff_permission/{id}/:
    get:
      operationId: staff_permission_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - staff_permission
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffPermission'
          description: ''
  /staff_permissions/:
    get:
      operationId: staff_permissions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - staff_permissions
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffPermissionList'
          description: ''
  /staffs/:
    get:
      operationId: staffs_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - staffs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffList'
          description: ''
    post:
      operationId: staffs_create
      tags:
      - staffs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /staffs/{id}/:
    get:
      operationId: staffs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - staffs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /verify_otp/:
    post:
      operationId: verify_otp_create
      tags:
      - verify_otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
components:
  schemas:
    ActivityLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        actor:
          type: integer
        action_time:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          readOnly: true
        time:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        activity:
          type: string
          readOnly: true
      required:
      - action_time
      - activity
      - actor
      - date
      - id
      - time
    EmailOTP:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Logout:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    NullEnum:
      enum:
      - null
    PaginatedActivityLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLog'
    PaginatedServiceProviderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceProvider'
    PaginatedStaffList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Staff'
    PaginatedStaffPermissionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffPermission'
    PatchedResetPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 128
        confirm_password:
          type: string
          writeOnly: true
          maxLength: 128
    PatchedServiceProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        picture:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
        date:
          type: string
          readOnly: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        toggle_status_url:
          type: string
          readOnly: true
        staffs_with_permission:
          type: object
          additionalProperties: {}
          readOnly: true
    PatchedStaff:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone_number:
          type: string
          maxLength: 128
        tribe:
          type: string
          readOnly: true
        squad:
          type: string
          readOnly: true
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/NullEnum'
        designation:
          type: string
          readOnly: true
        full_designation:
          type: string
          readOnly: true
        tribe_name:
          type: string
          writeOnly: true
        squad_name:
          type: string
          writeOnly: true
        designation_name:
          type: string
          writeOnly: true
        reset_url:
          type: string
          readOnly: true
        revoke_url:
          type: string
          readOnly: true
        permissions:
          type: string
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
    ResetPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 128
        confirm_password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - confirm_password
      - password
    RoleEnum:
      enum:
      - Intern
      - Associate
      - VP
      - Analyst
      - Manager
      - Head
      - Managing Director
      type: string
      description: |-
        * `Intern` - Intern
        * `Associate` - Associate
        * `VP` - VP
        * `Analyst` - Analyst
        * `Manager` - Manager
        * `Head` - Head
        * `Managing Director` - Managing Director
    ServiceProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        picture:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
        date:
          type: string
          readOnly: true
        website_url:
          type: string
          format: uri
          maxLength: 200
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        toggle_status_url:
          type: string
          readOnly: true
        staffs_with_permission:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - date
      - id
      - name
      - picture
      - slug
      - staffs_with_permission
      - toggle_status_url
      - url
      - website_url
    Staff:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        phone_number:
          type: string
          maxLength: 128
        tribe:
          type: string
          readOnly: true
        squad:
          type: string
          readOnly: true
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/NullEnum'
        designation:
          type: string
          readOnly: true
        full_designation:
          type: string
          readOnly: true
        tribe_name:
          type: string
          writeOnly: true
        squad_name:
          type: string
          writeOnly: true
        designation_name:
          type: string
          writeOnly: true
        reset_url:
          type: string
          readOnly: true
        revoke_url:
          type: string
          readOnly: true
        permissions:
          type: string
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
      required:
      - designation
      - designation_name
      - email
      - first_name
      - full_designation
      - id
      - last_name
      - permissions
      - phone_number
      - reset_url
      - revoke_url
      - squad
      - squad_name
      - tribe
      - tribe_name
      - url
    StaffPermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          readOnly: true
        staff:
          type: string
          format: uri
          readOnly: true
        service_provider:
          type: string
          format: uri
          readOnly: true
        staff_list:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        sp_list:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        is_permitted:
          type: boolean
          readOnly: true
      required:
      - id
      - is_permitted
      - name
      - service_provider
      - sp_list
      - staff
      - staff_list
      - url
    StatusEnum:
      enum:
      - Success
      - Failed
      type: string
      description: |-
        * `Success` - Success
        * `Failed` - Failed
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    VerifyOTP:
      type: object
      properties:
        otp_code:
          type: string
          writeOnly: true
          maxLength: 6
        email:
          type: string
          format: email
          writeOnly: true
      required:
      - email
      - otp_code
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
